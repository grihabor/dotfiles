#!/usr/bin/env python3
import logging
import os
import subprocess
import sys
from pathlib import Path
from urllib.parse import urlparse

logger = logging.getLogger(__name__)


def parse_url(url):
    try:
        return urlparse(url)
    except ValueError:
        return None


def main():
    # Install:
    #   sudo update-alternatives --install /usr/bin/x-www-browser x-www-browser /home/grihabor/.local/bin/firefox-wrapper 100
    #   sudo update-alternatives --install /usr/bin/gnome-www-browser gnome-www-browser /home/grihabor/.local/bin/firefox-wrapper 100
    #   xdg-settings set default-web-browser firefox-wrapper.desktop
    logging.basicConfig(
        filename=Path(os.environ["HOME"]) / ".local" / "firefox.log",
        filemode="a",
        level=logging.DEBUG,
        format='{"ts":"%(asctime)s","lvl":"%(levelname)s","msg":"%(message)s"}',
    )
    user_firefox = "firefox"
    args = get_args(user_firefox)
    logger.info("old args: %s", sys.argv)
    logger.info("new args: %s", args)
    subprocess.run(args)


def get_args(firefox: str) -> list[str]:
    args = sys.argv[1:]
    print(args)

    try:
        first_arg = next(arg for arg in args if not arg.startswith("-"))
    except StopIteration:
        return [firefox] + args

    if (url := parse_url(first_arg)) is not None:
        if (
            "pulsepoint" in url.path
            or url.hostname is not None
            and (
                "pulsepoint" in url.hostname
                or "pulse.prod" in url.hostname
                or "ppinc" in url.hostname
                or "newrelic" in url.hostname
                or "onenr" in url.hostname
            )
        ):
            return [firefox, "-P", "pulsepoint"] + args

        else:
            return [firefox, "-P", "personal"] + args

    return [firefox] + args


if __name__ == "__main__":
    main()
